@model Andor.Models.Pessoa
@{
    var mensagem = ViewData["mensagem"];
}
<div  class="container-fluid pt-0 mb-5 pb-5 modal-dialog-scrollable bg-light">
    <div  class="container">
        <div class="card-3d-wrap mx-auto border p-4 forms-details" style="">
            <form asp-action="EditarSenha" method="post" class="mt-3 needs-validation" novalidate><!-- manutenção de senha -->
                <h4 class="border-bottom">Manutenção de senha</h4>
                <br />
                <div class="">
                    <input type="hidden" name="id" value="@Model.Id" />
                    <div class="">
                        <label class="control-label">Senha</label>
                        <input class="form-control" id="senha" name="senha" type="password" required autofocus/>
                        <div class="invalid-feedback"> Informe senha atual.</div>
                    </div>
                    <div class="">
                        <label class="control-label">Nova senha</label>
                        <input class="form-control" id="nSenha" name="nSenha" type="password" required pattern="^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$"/>
                        <div class="invalid-feedback"> Deve conter um caractere especial, uma letra maiúscula e um numeral.</div>
                    </div>
                    <div class="">
                        <label class="control-label">Repetir nova senha</label>
                        <input class="form-control" id="rSenha" name="rSenha" type="password" required pattern="^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$"/>
                        <div class="invalid-feedback"> Precisa ser igual a nova senha.</div>
                    </div>
                </div>
                  <p id="mess"> </p>
                <div class="text-right">
                  
                    @{
                        if (mensagem != null)
                        {
                            <small>@mensagem</small>
                        }
                    }
                    <br />
                    <button class="btnn mt-3" >Salvar senha</button>
                </div>
            </form>
        </div>
    </div>
</div>
 

<script>
    // desativa comportamento padrão do html5 se houver campos inválidos.
    (function() {
      'use strict';
      window.addEventListener('load', function() {
        // Pega todos os formulários que nós queremos aplicar estilos de validação Bootstrap personalizados.
        var forms = document.getElementsByClassName('needs-validation');
        // Faz um loop neles e evita o envio caso não esteja validado
        var validation = Array.prototype.filter.call(forms, function(form) {
          form.addEventListener('submit', function(event) {
            if (form.checkValidity() === false) {
              event.preventDefault();
              event.stopPropagation();
            }
            form.classList.add('was-validated');
          }, false);
        });
      }, false);
    })();
</script>