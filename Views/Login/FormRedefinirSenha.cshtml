@{
    ViewData["title"] = "Redefinir senha";
    var mensagem = ViewData["mensagem"];
}
<div  class="container-fluid pt-0 mb-5 pb-5 modal-dialog-scrollable bg-light justify-content-center">
    <div  class="container ">
        <div class="row justify-content-center mt-5">
            <div class="col-md-5">
                <div class="border bg-white p-5 arredondar shadow">
                    <form asp-controller="Login" asp-action="RedefinirSenha" method="post" class="mt-3 needs-validation" novalidate>
                        <h4 class="border-bottom">Redefinir senha</h4>
                        <p class="text-justify">
                            O código de segurança foi enviado para seu email e expira em 5 minutos. <br />
                            Por favor verifique na pasta Spam caso não encontre na caixa de entrada.
                        </p>
                        <div class="">
                            <div class="">
                                <label class="control-label">Código de segurança</label>
                                <input class="form-control" name="vChave" type="text" required autofocus minlength="6" maxlength="6" />
                                <div class="invalid-feedback"> Informe o código.</div>
                            </div>
                            <div class="">
                                <label class="control-label">Nova senha</label>
                                <input class="form-control" name="nSenha" type="password" required pattern="^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$" maxlength="15"/>
                                <div class="invalid-feedback">Senha deve conter letras maiúsculas, minúsculas, numeais e caracteres especiais.</div>
                            </div>
                            <div class="">
                                <label class="control-label">Repetir senha</label>
                                <input class="form-control" name="rSenha" type="password" required pattern="^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$" maxlength="15" />
                                <div class="invalid-feedback">Deve ser igual a nova senha.</div>
                            </div>
                        </div>
                        <div class="text-right">
                            @{
                                if (mensagem != null)
                                {
                                    <small>@mensagem</small>
                                    <br />
                                }
                            }
                            
                            <button class="btnn mt-3" >Enviar</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // desativa comportamento padrão do html5 se houver campos inválidos.
    (function() {
      'use strict';
      window.addEventListener('load', function() {
        // Pega todos os formulários que nós queremos aplicar estilos de validação Bootstrap personalizados.
        var forms = document.getElementsByClassName('needs-validation');
        // Faz um loop neles e evita o envio caso não esteja validado
        var validation = Array.prototype.filter.call(forms, function(form) {
          form.addEventListener('submit', function(event) {
            if (form.checkValidity() === false) {
              event.preventDefault();
              event.stopPropagation();
            }
            form.classList.add('was-validated');
          }, false);
        });
      }, false);
    })();
</script>